heat_template_version: 2015-04-30

parameters:
  ### Template ###
  service_template_name:
    type: string
    label: Service template fq name
    description: Service template for port tuple
  service_template_properties_version:
    type: string
    description: Indicates service version
  service_template_properties_service_mode:
    type: string
    description: service mode
  service_template_properties_service_type:
    type: string
    description: service type
  service_template_properties_image_name:
    type: string
    description: Name of the image
  service_template_properties_flavor:
    type: string
    description: Flavor
  service_template_properties_ordered_interfaces:
    type: string
    description: Indicates service interfaces are ordered
  service_template_properties_interface_type_service_interface_type_1:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_template_properties_interface_type_shared_ip_1:
    type: boolean
    description: shared_ip for the ServiceTemplate
  service_template_properties_interface_type_static_route_enable_1:
    type: boolean
    description: static_route_enable for the ServiceTemplate
  service_template_properties_interface_type_service_interface_type_2:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_template_properties_interface_type_shared_ip_2:
    type: boolean
    description: shared_ip for the ServiceTemplate
  service_template_properties_interface_type_static_route_enable_2:
    type: boolean
    description: static_route_enable for the ServiceTemplate
  service_template_properties_interface_type_service_interface_type_3:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_template_properties_interface_type_shared_ip_3:
    type: boolean
    description: shared_ip for the ServiceTemplate
  service_template_properties_interface_type_static_route_enable_3:
    type: boolean
    description: static_route_enable for the ServiceTemplate
  service_template_properties_service_scaling:
    type: string
    description: Indicates whether service scaling is enabled
  service_template_properties_availability_zone_enable:
    type: string
    description: Indicates availability zone is enabled
  service_template_properties_service_virtualization_type:
    type: string
    description: Indicates virtualization type

  ### Service Instance ###
  service_instance_name:
    type: string
    label: Service instance fq name
    description: Service instance for port tuple
  service_instance_fqdn:
    type: string
    description: FQDN in format default-domain:admin:service_instance
  ## Networks ##
  management_network:
    type: string
    description: Name of management network to be created
  management_network_fqdn:
    type: string
    description: FQDN of management network to be created
  left_network:
    type: string
    description: Name of left network to be created
  left_network_fqdn:
    type: string
    description: FQDN in format default-domain:admin:name
  right_network:
    type: string
    description: Name of right network to be created
  right_network_fqdn:
    type: string
    description: FQDN in format default-domain:admin:name


  service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_2:
    type: string
    description: ip_prefix for the ServiceInstance
  service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len_2:
    type: number
    description: ip_prefix_len for the ServiceInstance
  service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_3:
    type: string
    description: ip_prefix for the ServiceInstance
  service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len_3:
    type: number
    description: ip_prefix_len for the ServiceInstance
  service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_address_mode_3:
    type: string
    description: address_mode for the ServiceInstance
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_1:
    type: string
    description: subnet prefix for mgmt network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_1:
    type: string
    description: subnet prefix len for mgmt network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_2:
    type: string
    description: subnet prefix for left network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_2:
    type: string
    description: subnet prefix len for left network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_3:
    type: string
    description: subnet prefix for right network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_3:
    type: string
    description: subnet prefix len for right network
  domain:
    type: string
    description: Name of the Domain
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_1:
    type: string
    description: subnet prefix for mgmt network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_1:
    type: string
    description: subnet prefix len for mgmt network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_2:
    type: string
    description: subnet prefix for left network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_2:
    type: string
    description: subnet prefix len for left network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_3:
    type: string
    description: subnet prefix for right network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_3:
    type: string
    description: subnet prefix len for right network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_1:
    type: string
    description: subnet prefix for mgmt network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_1:
    type: string
    description: subnet prefix len for mgmt network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_2:
    type: string
    description: subnet prefix for left network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_2:
    type: string
    description: subnet prefix len for left network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_3:
    type: string
    description: subnet prefix for right network
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_3:
    type: string
    description: subnet prefix len for right network
  
  port_tuple_name:
    type: string
    description: name of Port Tuple

  ## Floating IP ##
  router_external:
    type: boolean
    description: When true, this virtual network is openstack router external network.
  route_target_list_route_target:
    type: string
    description: route_target for the VirtualNetwork

  ## Policy ##
  policy_name:
    type: string
    description: display name of policy
  src_port_end:
    type: number
    description: End of the Source Port Range
  src_port_start:
    type: number
    description: Start of the Source Port Range
  dst_port_end:              
    type: number             
    description: End of the Destination Port
  dst_port_start:  
    type: number
    description: End of the Destination Port
  direction:
    type: string
    description: Diretion of the traffic
  simple_action:
    type: string
    description: Pass or Deny
  protocol:
    type: string
    description: Protocol
  policy_fqdn:
    type: string
    description: FQDN of poliy

  ## Policies name ##
  allow_all_policy_name:
    type: string
    description: Allow All name
  allow_all_policy_name_fqdn:
    type: string
    description: FQDN of policy default-domain:admin:allow-all
  security_group_fqdn:
    type: string
    description: Security Group FQDN
 
  ## Number of servie instance ##
  service_instance_number:
    type: string
    description: Number of servie instance. Integer

### Start Resource ###
resources:
  template_NetworkIpam_1:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: management_network }

  template_NetworkIpam_2:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: left_network }

  template_NetworkIpam_3:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: { get_param: right_network }

### Virtual Network management-left-right with the above IPAM ###
  template_VirtualNetwork_1:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_1 ]
    properties:
      name: { get_param: management_network }
      route_target_list:
        {
          route_target_list_route_target: [{ get_param: route_target_list_route_target }],
        }
      router_external: { get_param: router_external }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_1 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_1 },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_1 },
                },
            }]
         }]

  template_VirtualNetwork_2:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_2 ]
    properties:
      name: { get_param: left_network }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_2 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_2 },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_2 },
                },
            }]
         }]

  template_VirtualNetwork_3:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ template_NetworkIpam_3 ]
    properties:
      name: { get_param: right_network }
      network_ipam_refs: [{ get_resource: template_NetworkIpam_3 }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_3 },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len_3 },
                },
            }]
         }]

### Service template v2 ###
  template_ServiceTemplate:
    type: OS::ContrailV2::ServiceTemplate
    properties:
      name: { get_param: service_template_name }
      service_template_properties:
        {
          service_template_properties_version: { get_param: service_template_properties_version },
          service_template_properties_service_mode: { get_param: service_template_properties_service_mode },
          service_template_properties_service_type: { get_param: service_template_properties_service_type },
          service_template_properties_image_name: { get_param: service_template_properties_image_name },
          service_template_properties_service_scaling: { get_param: service_template_properties_service_scaling },
          service_template_properties_interface_type:
            [
              {
              service_template_properties_interface_type_service_interface_type: { get_param: service_template_properties_interface_type_service_interface_type_1 },
              service_template_properties_interface_type_shared_ip: { get_param: service_template_properties_interface_type_shared_ip_1 },
              service_template_properties_interface_type_static_route_enable: { get_param: service_template_properties_interface_type_static_route_enable_1 },
              },
              {
              service_template_properties_interface_type_service_interface_type: { get_param: service_template_properties_interface_type_service_interface_type_2 },
              service_template_properties_interface_type_shared_ip: { get_param: service_template_properties_interface_type_shared_ip_2 },
              service_template_properties_interface_type_static_route_enable: { get_param: service_template_properties_interface_type_static_route_enable_2 },
              },
              {
              service_template_properties_interface_type_service_interface_type: { get_param: service_template_properties_interface_type_service_interface_type_3 },
              service_template_properties_interface_type_shared_ip: { get_param: service_template_properties_interface_type_shared_ip_3 },
              service_template_properties_interface_type_static_route_enable: { get_param: service_template_properties_interface_type_static_route_enable_3 },
              }
            ],
          service_template_properties_flavor: { get_param: service_template_properties_flavor },
          service_template_properties_ordered_interfaces: { get_param: service_template_properties_ordered_interfaces },
          service_template_properties_service_virtualization_type: { get_param: service_template_properties_service_virtualization_type },
          service_template_properties_availability_zone_enable: { get_param: service_template_properties_availability_zone_enable },
        }
      domain: { get_param: domain }

### Create service instance with above template ###
  template_ServiceInstance:
    type: OS::ContrailV2::ServiceInstance
    depends_on: [ template_ServiceTemplate ]
    properties:
      name: { get_param: service_instance_name }
      service_instance_properties:
        {
          service_instance_properties_interface_list:
            [
              {
                service_instance_properties_interface_list_virtual_network:
                 {
                   list_join: [':', { get_attr: [ template_VirtualNetwork_1, fq_name ] } ]
                 },
              },
              {
              service_instance_properties_interface_list_virtual_network:
                {
                   list_join: [':', { get_attr: [ template_VirtualNetwork_2, fq_name ] } ]
                },
              service_instance_properties_interface_list_allowed_address_pairs:
                {
                  service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair:
                    [{
                      service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip:
                        {
                          service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix: { get_param: service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_2 },
                          service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len: { get_param: service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len_2 },
                        }
                    }],
                },
              },
              {
              service_instance_properties_interface_list_virtual_network:
                {
                   list_join: [':', { get_attr: [ template_VirtualNetwork_3, fq_name ] } ]
                },
              service_instance_properties_interface_list_allowed_address_pairs:
                {
                  service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair:
                    [{
                      service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip:
                        {
                          service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix: { get_param: service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_3 },
                          service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len: { get_param: service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_ip_ip_prefix_len_3 },
                        },
                      service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_address_mode: { get_param: service_instance_properties_interface_list_allowed_address_pairs_allowed_address_pair_address_mode_3 },
                    }],
                },
              }
            ],
        }
      service_template_refs: [{ get_resource: template_ServiceTemplate }]

### Create "AutoScalingGroup". Desired_capacity = number of instance ###
  instance_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      desired_capacity:  { get_param: service_instance_number }
      max_size: 5
      min_size: 1
      resource:
        type: service_instance.yaml
        properties:
          image: { get_param: service_template_properties_image_name }
          flavor: { get_param: service_template_properties_flavor }
          virtual_network_1: { get_param: management_network }
          virtual_network_1_fqdn: { list_join: [':', { get_attr: [ template_VirtualNetwork_1, fq_name ] } ] }
          virtual_network_2: { get_param: left_network }
          virtual_network_2_fqdn: { list_join: [':', { get_attr: [ template_VirtualNetwork_2, fq_name ] } ] }
          virtual_network_3: { get_param: right_network }
          virtual_network_3_fqdn: { list_join: [':', { get_attr: [ template_VirtualNetwork_3, fq_name ] } ] }
          service_instance_name: { list_join: [':', { get_attr: [ template_ServiceInstance, fq_name ] } ] }
          service_interface_type_1: 'management'
          service_interface_type_2: 'left'
          service_interface_type_3: 'right'
          port_tuple_name: port_tuple_name
### Create Service Chaining Policy ###
### left -> right, with service = above service_instance ###
  service_chaining_policy:
    type: OS::ContrailV2::NetworkPolicy
    depends_on: [template_VirtualNetwork_2, template_VirtualNetwork_3]
    properties:
      name: { get_param: policy_name }
      network_policy_entries: { network_policy_entries_policy_rule: [{ 
                network_policy_entries_policy_rule_direction: { get_param: direction },
                network_policy_entries_policy_rule_protocol: { get_param: protocol },
                network_policy_entries_policy_rule_src_ports: [{
                        network_policy_entries_policy_rule_src_ports_start_port: { get_param: src_port_start },
                        network_policy_entries_policy_rule_src_ports_end_port: { get_param: src_port_end }
                                                                }],
                network_policy_entries_policy_rule_dst_ports: [{
                        network_policy_entries_policy_rule_dst_ports_start_port: { get_param: dst_port_start },
                        network_policy_entries_policy_rule_dst_ports_end_port: { get_param: dst_port_end }
                                                                }],
                network_policy_entries_policy_rule_dst_addresses: [{
                        network_policy_entries_policy_rule_dst_addresses_virtual_network: { get_param: right_network_fqdn }}],
                network_policy_entries_policy_rule_src_addresses: [{
                        network_policy_entries_policy_rule_src_addresses_virtual_network: { get_param: left_network_fqdn }}],
                network_policy_entries_policy_rule_action_list: { 
                        network_policy_entries_policy_rule_action_list_simple_action: { get_param: simple_action },
                        network_policy_entries_policy_rule_action_list_apply_service: [{ get_param: service_instance_fqdn }]
                        }
                }]}
### Create allow_all policy for management network ###
  allow_all_policy:
    type: OS::Contrail::NetworkPolicy
    depends_on: template_VirtualNetwork_1
    properties:
      name: { get_param: allow_all_policy_name }
      entries:
        policy_rule: [
              { 
                "direction": { get_param: direction }, 
                "protocol": { get_param: protocol },
                "action_list": { "simple_action": "pass" },
                "src_ports": [{"start_port": {get_param: src_port_start}, "end_port": {get_param: src_port_end}}],
                "dst_ports": [{"start_port": {get_param: dst_port_start}, "end_port": {get_param: dst_port_end}}],
                "dst_addresses": [{ "virtual_network": 'any'}], 
                "src_addresses": [{ "virtual_network": 'any'}] 
              }
        ]  
### Attach allow_all to management network ### 
  policy_attach_mgnt_network:
    type: OS::Contrail::AttachPolicy
    depends_on: allow_all_policy
    properties:
      network: { get_param: management_network_fqdn }
      policy: { get_param: allow_all_policy_name_fqdn }

### Attach service_chaining_policy to left/right network ###
  policy_attach_right_network:
    type: OS::Contrail::AttachPolicy
    depends_on: service_chaining_policy
    properties:
      network: { get_param: right_network_fqdn }
      policy: { get_param: policy_fqdn }

  policy_attach_left_network:
    type: OS::Contrail::AttachPolicy
    depends_on: service_chaining_policy
    properties:
      network: { get_param: left_network_fqdn }
      policy: { get_param: policy_fqdn }
